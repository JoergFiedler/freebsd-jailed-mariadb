---
- name: Create ZFS data sets
  zfs:
    name: '{{ host_mariadb_zfs_dataset }}{{ item.path }}'
    state: present
    extra_zfs_properties:
      atime: '{{ item.atime }}'
      primarycache: '{{ item.primarycache }}'
      logbias: '{{ item.logbias }}'
      recordsize: '{{ item.recordsize }}'
      mountpoint: '{{ host_mariadb_zfs_dir }}{{ item.path }}'
  loop: '{{ mariadb_datasets }}'

- name: Ensure mysql user permissions
  file:
    path: '{{ host_mariadb_zfs_dir }}{{ item.path }}'
    state: directory
    owner: 88
    group: 88
    mode: '0750'
  loop: '{{ mariadb_datasets }}'

- name: Ensure that mariadb directories exists within jail
  file:
    path: '{{ jail_home.stdout }}{{ mariadb_home }}{{ item.path }}'
    state: directory
  loop: '{{ mariadb_datasets }}'

- name: Configure jail to mount file system from host
  mount:
    name: '{{ jail_home.stdout }}{{ mariadb_home }}{{ item.path }}'
    fstab: '{{ jail_home.stdout }}/../fstab'
    fstype: 'nullfs'
    opts: 'rw'
    src: '{{ host_mariadb_zfs_dir }}{{ item.path }}'
    state: present
  loop: '{{ mariadb_datasets }}'

- name: Install MariaDB binary package
  pkgng:
    name: '{{ mariadb_server_pkg }}'
    state: present
    chroot: '{{ jail_home.stdout }}'
  register: pkg_result
  until: pkg_result is succeeded

- name: Enable MariaDb service
  lineinfile:
    backup: '{{ jail_backup_old_files }}'
    dest: '{{ jail_home.stdout }}/etc/rc.conf'
    state: present
    regexp: '{{ item.regex }}'
    line: '{{ item.line }}'
  loop:
  - { regex: '^mysql_enable=', line: 'mysql_enable="YES"'}
  - { regex: '^mysql_dbdir=', line: 'mysql_dbdir="{{ mariadb_dbdir }}"'}

- name: Fix mysql_install_db_args
  lineinfile:
    backup: '{{ jail_backup_old_files }}'
    dest: '{{ jail_home.stdout }}/usr/local/etc/rc.d/mysql-server'
    state: present
    regexp: '^mysql_install_db_args='
    line: >
      mysql_install_db_args="--basedir=/usr/local
      --datadir=${mysql_dbdir}
      --force
      --defaults-extra-file=${mysql_optfile}"

- name: Fix auth tables check
  replace:
    backup: '{{ jail_backup_old_files }}'
    dest: '{{ jail_home.stdout }}/usr/local/etc/rc.d/mysql-server'
    regexp: '^\s+if \[ ! -d "\$\{mysql_dbdir\}/mysql/." \]; then$'
    replace: '        if [ ! -f "${mysql_dbdir}/mysql/user.MYI" ]; then'

- name: Copy MariaDb config file
  template:
    backup: '{{ jail_backup_old_files }}'
    dest: '{{ host_mariadb_zfs_dir }}/data/my.cnf'
    src: 'my.cnf.j2'
    owner: 88
    group: 88
    mode: '0640'
  notify:
  - Restart jail s MariaDB

- name: Start jail
  command: |
    iocage start {{ jail_name }}
  when: jail_created is changed

- name: Check if database is secured
  command: |
    iocage exec {{ jail_name }} \
      /usr/local/bin/mysql -e 'use test'
  register: secure_check
  changed_when: false
  ignore_errors: true

- name: Copy MariaDB secure script to remote host
  template:
    src: 'mariadb-secure.sql.j2'
    dest: '/tmp/mariadb-secure.sql'
  changed_when: false
  when: secure_check is success

- name: Execute secure DB server script
  shell: |
    iocage exec {{ jail_name }} \
      /usr/local/bin/mysql mysql < /tmp/mariadb-secure.sql
  when: secure_check is success

- name: Delete secure script from remote host
  file:
    path: '/tmp/mariadb-secure.sql'
    state: absent
  changed_when: false
  when: secure_check is success

- name: Backup MariaDB with tarsnap
  template:
    backup: '{{ jail_backup_old_files }}'
    src: 'tarsnapper.yml.j2'
    dest: '/usr/local/etc/tarsnapper.d/{{ jail_name }}.yml'
  when: tarsnap_enabled | default(false)
